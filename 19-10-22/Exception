/*
 * WAP to use the try catch finally , multiple catch block and nested try and catch block
		 1.try catch           1. arithmetic operation
		2:try catch finally    2. accept the size and than accept no arr[size+1]=45;
		3:nested try catch            3: arithmetic, array, accept name from user than 
		4:multiple catch block           display the name, assign null value to name. display the hascode
 */


package Exceptions;

import java.util.Scanner;

public class combination 
{
	static Scanner sc=new Scanner(System.in);
	public static void main(String[] args) 
	{
		main_method();

	}
		static void main_method()
		{
			int choice;
			char ans;
			do 
			{
					System.out.println("Menu\n 1.try catch\n2.try catch finally\n3.nested try catch\n 4.multiple catch block");
					choice=sc.nextInt();
					switch(choice)
					{
						case 1:
							try
							{
								int num1,num2,res;
								
								System.out.println("Entre two no");
								num1=sc.nextInt();
								num2=sc.nextInt();
								
								res=num1+num2;
								System.out.println("The add is ="+res);
								
								res=num1*num2;
								System.out.println("The mul is ="+res);
								
								res=num1/num2;
								System.out.println("The div is ="+res);
								
								res=num1+num2;
								System.out.println("The sub is ="+res);
								
							}
							catch(Exception e)
							{
								System.out.println("the  second no cannot be zero");
							}
							break;
						case 2:
							try
							{
								int[] arr=new int[5];
								
								arr[6]=45;
								int i;
								for(i=0;i<5;i++)
								{
									System.out.println("array="+arr[i]);
								}
							}
							catch(ArrayIndexOutOfBoundsException e)
							{
								System.out.println("The array size is greater than its declared size");
							}
							finally
							{
								System.out.println("this is  finally always display");
							}
							break;
						case 3:
							try
							{
								int num1,num2,res;
								
								System.out.println("Entre two no");
								num1=sc.nextInt();
								num2=sc.nextInt();
								
								res=num1+num2;
								System.out.println("The add is ="+res);
								
								res=num1*num2;
								System.out.println("The mul is ="+res);
								
								res=num1/num2;
								System.out.println("The div is ="+res);
								
								res=num1+num2;
								System.out.println("The sub is ="+res);
								
								try
								{
									int[] arr=new int[5];
									
									arr[6]=45;
									int i;
									for(i=0;i<5;i++)
									{
										System.out.println("array="+arr[i]);
									}
								}
								catch(ArrayIndexOutOfBoundsException e)
								{
									System.out.println("The array size is greater than its declared size");
								}
								try
								{
									String name;
									name=null;
									System.out.println("the name is="+name.hashCode());
								}
								catch(NullPointerException n)
								{
									System.out.println("The name cannot be null");
								}
								
							}
							
							catch(Exception e)
							{
								System.out.println("the  second no cannot be zero");
							}
							
							break;
						case 4:
							try
							{
								int num1,num2,res;
								
								Scanner sc=new Scanner(System.in);
								System.out.println("Entre two no");
								num1=sc.nextInt();
								num2=sc.nextInt();
								
								res=num1*num2;
								System.out.println("The mul is ="+res);
								
								res=num1/num2;
								System.out.println("The div is ="+res);
								
								res=num1+num2;
								System.out.println("The add is ="+res);
								//ArrayIndexOutOfBounds
								int[] arr=new int[5];
								
								arr[4]=45;
								int i;
								for(i=0;i<5;i++)
								{
									System.out.println("array="+arr[i]);
								}
								//NullPointer
								String name;
								name=null;
								System.out.println("the name is="+name.hashCode());
								
								
							}
							catch(ArrayIndexOutOfBoundsException e)
							{
								System.out.println("The array size is greater than its declared size");
							}
							catch(NullPointerException n)
							{
								System.out.println("The name cannot be null");
							}
							catch(Exception e)
							{
								System.out.println("the second no cannot be zero");
							}
							
							break;
						default:
							System.out.println("Invalid choice");
					
					}
				System.out.println("/nDo you want to choice another option y/n");
				ans=sc.next().charAt(0);
			}
			while(ans=='y' || ans=='Y');
		
		}

}
